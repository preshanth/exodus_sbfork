name: Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dietlibc-dev gcc musl musl-tools
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          .tox
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/development-requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r development-requirements.txt
        pip install -e .
    
    - name: Run tests with pytest
      run: |
        pytest --cov --cov-report=term-missing --cov-report=xml -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Test package build
      run: |
        python -m build
    
    - name: Test basic functionality
      run: |
        exodus --help
        echo "Testing basic bundling (will use shell launchers without musl/diet)"
        # Test bundling a simple command - this will fail gracefully if binary not found
        timeout 30s exodus --shell-launchers /bin/echo --output test-bundle.sh || echo "Expected: binary bundling test completed"

  test-tox:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y dietlibc-dev gcc musl musl-tools
    
    - name: Install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox
    
    - name: Run tox
      run: tox

  package:
    runs-on: ubuntu-latest
    needs: [test, test-tox]
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: dist/